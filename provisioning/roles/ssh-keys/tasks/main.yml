## Adapted from https://community.ibm.com/community/user/ibmz-and-linuxone/blogs/asif-mahmud1/2020/03/15/cloning-private-git-repository-using-ansible
- name: Generate SSH key for accessing GitHub
  ansible.builtin.command: "ssh-keygen -t rsa -f {{ key_path }} -N ''"
  args:
    creates: "{{ key_path }}"
  register: ssh_key

- name: Create ssh config file
  ansible.builtin.template:
    src: ssh_config.j2
    dest: "{{ ssh_config_path }}"
    mode: "0644"

- name: Add SSH public key to GitHub account
  block:
    - name: Get key content
      ansible.builtin.command: "cat {{ key_path }}.pub"
      register: key_content
      changed_when: ssh_key.changed

    - ansible.builtin.debug:
        msg: "{{ github_token }}"

    - name: Upload key to GitHub account
      ansible.builtin.uri:
        url: https://api.github.com/user/keys
        validate_certs: false
        method: POST
        body:
          title: "{{ key_title }}"
          key: "{{ key_content.stdout }}"
        body_format: json
        headers:
          Content-Type: "application/json"
          # FIXME: use ansible-vault to encrypt GH_PAT
          Authorization: "token {{ github_token }}"
        status_code: 200, 201
      changed_when: key_content.changed
      register: task_log

- name: Ensure known_host entry for GitHub
  block:
    - name: Fetch GitHub public key
      ansible.builtin.command: "ssh-keyscan -t rsa github.com"
      register: keyscan
      changed_when: false

    - name: Add GitHub public key to known_hosts
      ansible.builtin.known_hosts:
        name: github.com
        key: "{{ keyscan.stdout }}"
        path: "{{ known_hosts_path }}"
